{"ast":null,"code":"var _jsxFileName = \"/Users/HongWei-HSU/Desktop/Expense_board/src/components/Chart/Chart.js\";\nimport ChartBar from \"./ChartBar\";\nimport \"./Chart.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Chart = props => {\n  const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value); //只要dp裡面的value做出新陣列\n\n  const totalMaximum = Math.max(...dataPointValues); //max函數不吃陣列，所以要spread\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart\",\n    children: props.dataPoints.map(dataPoint => /*#__PURE__*/_jsxDEV(ChartBar, {\n      //預設是每個data的label都獨一無二\n      value: dataPoint.value,\n      maxValue: null,\n      label: dataPoint.label\n    }, dataPoint.label, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this) //maxValue用來作分母，對所有data都應是同樣的數值\n    )\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Chart;\nexport default Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"sources":["/Users/HongWei-HSU/Desktop/Expense_board/src/components/Chart/Chart.js"],"names":["ChartBar","Chart","props","dataPointValues","dataPoints","map","dataPoint","value","totalMaximum","Math","max","label"],"mappings":";AAAA,OAAOA,QAAP,MAAqB,YAArB;AACA,OAAO,aAAP;;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AACvB,QAAMC,eAAe,GAAGD,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAsBC,SAAD,IAAeA,SAAS,CAACC,KAA9C,CAAxB,CADuB,CACuD;;AAC9E,QAAMC,YAAY,GAAGC,IAAI,CAACC,GAAL,CAAS,GAAGP,eAAZ,CAArB,CAFuB,CAE4B;;AAEnD,sBACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,cACGD,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAsBC,SAAD,iBACpB,QAAC,QAAD;AACwB;AACtB,MAAA,KAAK,EAAEA,SAAS,CAACC,KAFnB;AAGE,MAAA,QAAQ,EAAE,IAHZ;AAIE,MAAA,KAAK,EAAED,SAAS,CAACK;AAJnB,OACOL,SAAS,CAACK,KADjB;AAAA;AAAA;AAAA;AAAA,YADoB,CAMP;AANd;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAhBD;;KAAMV,K;AAkBN,eAAeA,KAAf","sourcesContent":["import ChartBar from \"./ChartBar\";\nimport \"./Chart.css\";\n\nconst Chart = (props) => {\n  const dataPointValues = props.dataPoints.map((dataPoint) => dataPoint.value); //只要dp裡面的value做出新陣列\n  const totalMaximum = Math.max(...dataPointValues); //max函數不吃陣列，所以要spread\n\n  return (\n    <div className=\"chart\">\n      {props.dataPoints.map((dataPoint) => (\n        <ChartBar\n          key={dataPoint.label} //預設是每個data的label都獨一無二\n          value={dataPoint.value}\n          maxValue={null}\n          label={dataPoint.label}\n        ></ChartBar> //maxValue用來作分母，對所有data都應是同樣的數值\n      ))}\n    </div>\n  );\n};\n\nexport default Chart;\n"]},"metadata":{},"sourceType":"module"}